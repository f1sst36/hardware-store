@import "./variables";

@mixin hiddenScrollbar() {
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin multilineTextTruncate($linesCount) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: $linesCount;
  -webkit-box-orient: vertical;
}

@mixin gradientText($gradient) {
  background-clip: text;
  -webkit-text-fill-color: transparent;
  background-image: $gradient;
}

@mixin textTruncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin visibilityHidden() {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

@mixin md {
  @media screen and (max-width: #{map-get($breakpoints, lg) - 1}) {
    @content;
  }
}

@mixin sm {
  @media screen and (max-width: #{map-get($breakpoints, md) - 1}) {
    @content;
  }
}

@mixin xs {
  @media screen and (max-width: #{map-get($breakpoints, sm) - 1}) {
    @content;
  }
}

@mixin lg-only {
  @media screen and (min-width: map-get($breakpoints, lg)) {
    @content;
  }
}

@mixin lg-md-only {
  @media screen and (min-width: map-get($breakpoints, md)) {
    @content;
  }
}

@mixin md-only {
  @media screen and  (max-width: #{map-get($breakpoints, lg) - 1}) and (min-width: map-get($breakpoints, md)) {
    @content;
  }
}

@mixin sm-only {
  @media screen and  (max-width: #{map-get($breakpoints, md) - 1}) and (min-width: map-get($breakpoints, sm)) {
    @content;
  }
}

@mixin xs-only {
  @media screen and  (max-width: #{map-get($breakpoints, sm) - 1}) and (min-width: map-get($breakpoints, xs)) {
    @content;
  }
}

@mixin respond-to($max-width) {
  @media screen and (max-width: #{$max-width}) {
    @content;
  }
}